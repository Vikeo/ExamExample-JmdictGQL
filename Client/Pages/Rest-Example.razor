@page "/rest-example"
@inject IHttpClientFactory HttpClientFactory
@using System.Text.Json;

@code {
    private HttpClient restApiClient;
    private string _searchInput = "カラオケ";
    private List<RestDictResult>? results;

    protected override async Task OnInitializedAsync()
    {
        restApiClient = HttpClientFactory.CreateClient("RestApi");
    }

    private async Task Search()
    {
        var response = await restApiClient.GetAsync($"reading/{_searchInput}");
        if (response.IsSuccessStatusCode)
        {
            var jsonOptions = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            var responseContent = await response.Content.ReadAsStringAsync();

            results = JsonSerializer.Deserialize<List<RestDictResult>>(responseContent, jsonOptions);
        }
    }
}


<PageTitle>Index</PageTitle>

<div>Showing results for: @_searchInput</div>

@if (results is not null)
{
        <div>
        @foreach (var entry in results)
        {
            @if (entry!.Kanji!.Count() > 0)
            {
                        <ul>
                            <li>SequenceId: @entry!.Sequence</li>
                            <li>Reading: @entry!.Kanji!.FirstOrDefault()!.Expression</li>
                        </ul>
            }
        }
        </div>
}

<button @onclick="Search">Search</button>

