@code {

    [Inject]
    private IDictClient client { get; set; }
    
    // This is the that we query for when we load the index page.
    public string? _searchInput = "カラオケ";

    private IOperationResult<IKanjiExpressionsByReadingResult> result = null!;

    private async Task SearchByReading()
    {
        result = await client.KanjiExpressionsByReading.ExecuteAsync(_searchInput);
    }


    protected override async Task OnInitializedAsync()
    {
        // This makes it so that the initial page load doesn't trigger a search, if the _searchInput is empty.
        if (!String.IsNullOrEmpty(_searchInput))
        {
            await SearchByReading();
        }
    }
}

@page "/"

<PageTitle>Index</PageTitle>

<button @onclick="SearchByReading">Search</button>

<div>Showing results for: @_searchInput</div>

@if (result?.Data is not null)
{
    <div>
    @foreach (var entry in result.Data!.EntriesByReading)
    {
        @if(entry!.Kanji!.Count() > 0)
        {
            <ul>
                <li>SequenceId: @entry!.Sequence</li>
                <li>Reading: @entry!.Kanji!.FirstOrDefault()!.Expression</li>
            </ul>
        }
    }
    </div>
}




